#!/bin/bash

# some more ls aliases
alias ls=$'ls --group-directories-first --color=auto --time-style="+\e[33m[\e[32m%Y-%m-%d \e[35m%k:%M\e[33m]\e[m"'
alias ll='ls -AlhF --group-directories-first'
alias la='ls -A'
alias l='ls -CF'

# aliases add by user
alias lt='ls -alFht'

alias h='history'

alias dt="date '+%A %B %d %Y %H:%M:%S'"

alias df='df -Th'

alias du='du -h'
alias dul='du --max-depth 1 | sort -rh | head'

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

alias ip="dig +short myip.opendns.com @resolver1.opendns.com"

alias ai='sudo apt-get install'
alias ar='sudo apt-get remove'
alias aar='sudo apt autoremove'
alias au='sudo apt-get update'
alias aug='sudo apt-get upgrade'

alias vi='vim'
alias vim='nvim'

alias rlb='source ~/.bashrc'
alias vib='vim ~/.bashrc'
alias vips='vim ~/.bash/prompt'
alias vial='vim ~/.bash/aliases'
alias vipr='vim ~/.bash/profile'
alias viv='vim ~/.config/nvim/init.vim'

alias cdc='cd /media/halepham/C_DRIVE'
alias cdd='cd /media/halepham/D_DRIVE'
alias cde='cd /media/halepham/EXTENDED'

alias csa='source ~/.bash/conda_init.sh' #'conda activate'
alias csd='conda deactivate'

alias tbw='~/.scripts/tbw.sh'

alias py='python3'

256tab() {
    for k in `seq 0 1`;do
        for j in `seq $((16+k*18)) 36 $((196+k*18))`;do
            for i in `seq $j $((j+17))`; do
                printf "\e[01;$1;38;5;%sm%4s" $i $i;
            done;echo;
        done;
    done
}

fe() {
    local file
    file=$(fzf-tmux --query="$1" --select-1 --exit-0)
    [ -n "$file" ] && ${EDITOR:-nvim} "$file"
}

is_in_git_repo() {
    git rev-parse HEAD > /dev/null 2>&1
}

# fco - checkout git branch/tag
fco() {
    local tags branches target
    is_in_git_repo || return
    tags=$(                                         \
        git tag                                     |
        awk '{print "\x1b[31;1mtag\x1b[m\t" $1}'    \
    ) || return
    branches=$(                                     \
        git branch --all                            |
        grep -v HEAD                                |
        sed "s/.* //"                               |
        sed "s#remotes/[^/]*/##"                    |
        sort -u                                     |
        awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}' \
    ) || return
    target=$(                                       \
        (echo "$tags"; echo "$branches")            |
        sed '/^$/d'                                 |
        fzf --no-hscroll                            \
            --height 50%                            \
            --border                                \
            --reverse                               \
            --ansi                                  \
            +m                                      \
            -d "\t"                                 \
            -n 2                                    \
            -q "$*"                                 \
    ) || return
    git checkout $(echo "$target" | awk '{print $2}')
}

gf() {
    is_in_git_repo || return
    git -c color.status=always status --short |
    fzf -m                                                                                                                 \
        --ansi --nth 2..,..                                                                                                \
        --bind=ctrl-j:down,ctrl-k:up,ctrl-e:preview-down,ctrl-y:preview-up,ctrl-u:preview-page-up,ctrl-d:preview-page-down \
        --header "ctrl J/K/E/Y: up/down/preview-down/preview-up"                                                           \
        --preview '(git diff --color=always -- {-1} | sed 1,4d) | head -500'                                               |
    cut -c4- | sed 's/.* -> //'
}

gh() {
    is_in_git_repo || return
    git log --date=short                                          \
            --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" \
            --graph                                               \
            --color=always                                        |
    fzf --ansi                                                                                                             \
        --no-sort                                                                                                          \
        --reverse                                                                                                          \
        --multi                                                                                                            \
        --bind=ctrl-j:down,ctrl-k:up,ctrl-e:preview-down,ctrl-y:preview-up,ctrl-u:preview-page-up,ctrl-d:preview-page-down \
        --header "ctrl J/K/E/Y: up/down/preview-down/preview-up"                                                           \
        --preview 'grep -o "[a-f0-9]\{7,\}" <<< {}                                                                         |
                   xargs git show --color=always                                                                           |
                   head -200'                                                                                              |
    grep -o "[a-f0-9]\{7,\}"
}
